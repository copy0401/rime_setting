__build_info:
  rime_version: 1.7.1
  timestamps:
    default: 1561294610
    default.custom: 1614421690
    key_bindings: 1561294610
    key_bindings.custom: 0
    punctuation: 1561294610
    punctuation.custom: 0
    terra_pinyin_onion.custom: 0
    terra_pinyin_onion.schema: 1612890482
back_mark:
  comment_format:
    - "xform/^/  /"
    - "xform/@/ /"
  opencc_config: back_mark_ocm.json
  option_name: back_mark
  show_in_comment: true
  tags:
    - abc
  tips: char
custom_phrase:
  db_class: stabledb
  dictionary: ""
  enable_completion: false
  enable_sentence: false
  initial_quality: 1
  user_dict: custom_phrase
editor:
  bindings:
    "Control+Return": commit_script_text
    Return: confirm
    "Shift+Return": commit_raw_input
engine:
  filters:
    - simplifier
    - "simplifier@back_mark"
    - uniquifier
    - "reverse_lookup_filter@top_reverse_lookup"
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - "table_translator@custom_phrase"
    - reverse_lookup_translator
    - script_translator
key_binder:
  bindings:
    - {accept: "Control+p", send: Up, when: composing}
    - {accept: "Control+n", send: Down, when: composing}
    - {accept: "Control+b", send: Left, when: composing}
    - {accept: "Control+f", send: Right, when: composing}
    - {accept: "Control+a", send: Home, when: composing}
    - {accept: "Control+e", send: End, when: composing}
    - {accept: "Control+d", send: Delete, when: composing}
    - {accept: "Control+k", send: "Shift+Delete", when: composing}
    - {accept: "Control+h", send: BackSpace, when: composing}
    - {accept: "Control+g", send: Escape, when: composing}
    - {accept: "Control+bracketleft", send: Escape, when: composing}
    - {accept: "Alt+v", send: Page_Up, when: composing}
    - {accept: "Control+v", send: Page_Down, when: composing}
    - {accept: ISO_Left_Tab, send: "Shift+Left", when: composing}
    - {accept: "Shift+Tab", send: "Shift+Left", when: composing}
    - {accept: Tab, send: "Shift+Right", when: composing}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: comma, send: Page_Up, when: paging}
    - {accept: period, send: Page_Down, when: has_menu}
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+2", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+3", toggle: full_shape, when: always}
    - {accept: "Control+Shift+4", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+5", toggle: simplification, when: always}
    - {accept: "Control+Shift+6", toggle: extended_charset, when: always}
    - {accept: "Control+Shift+exclam", select: .next, when: always}
    - {accept: "Control+Shift+at", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+numbersign", toggle: full_shape, when: always}
    - {accept: "Control+Shift+dollar", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+percent", toggle: simplification, when: always}
    - {accept: "Control+Shift+asciicircum", toggle: extended_charset, when: always}
    - {accept: "Shift+space", toggle: ascii_mode, when: always}
    - {accept: "Control+comma", toggle: ascii_mode, when: always}
    - {accept: "Control+period", toggle: full_shape, when: always}
    - {accept: "Control+semicolon", toggle: simplification, when: always}
    - {accept: "Control+slash", toggle: ascii_punct, when: always}
    - {accept: comma, send: comma, when: has_menu}
    - {accept: comma, send: comma, when: paging}
    - {accept: period, send: period, when: has_menu}
    - {accept: period, send: period, when: paging}
    - {accept: minus, send: minus, when: has_menu}
    - {accept: minus, send: minus, when: paging}
    - {accept: equal, send: equal, when: has_menu}
    - {accept: equal, send: equal, when: paging}
    - {accept: Up, send: KP_Left, when: composing}
    - {accept: Up, send: Up, when: paging}
    - {accept: "Shift+Left", send: KP_Left, when: composing}
    - {accept: "Shift+space", send: "Shift+Right", when: composing}
    - {accept: Left, send: Page_Up, when: paging}
    - {accept: Right, send: Page_Down, when: paging}
    - {accept: Tab, send: Page_Down, when: has_menu}
    - {accept: "Shift+Tab", send: Page_Up, when: paging}
    - {accept: "Shift+Down", send: Page_Down, when: has_menu}
    - {accept: "Shift+Up", send: Page_Up, when: paging}
    - {accept: "Shift+space", send: "Shift+Left", when: paging}
    - {accept: "Control+Shift+6", toggle: back_mark, when: always}
  import_preset: default
menu:
  page_size: 9
punctuator:
  full_shape:
    " ": {commit: "　"}
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    "#": ["＃", "⌘"]
    "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
    "%": ["％", "°", "℃"]
    "&": "＆"
    "'": {pair: ["‘", "’"]}
    "(": "（"
    ")": "）"
    "*": ["＊", "·", "・", "×", "※", "❂"]
    "+": "＋"
    ",": {commit: "，"}
    "-": "－"
    .: {commit: "。"}
    "/": ["／", "÷"]
    ":": {commit: "："}
    ";": {commit: "；"}
    "<": ["《", "〈", "«", "‹"]
    "=": "＝"
    ">": ["》", "〉", "»", "›"]
    "?": {commit: "？"}
    "@": ["＠", "☯"]
    "[": ["「", "【", "〔", "［"]
    "\\": ["、", "＼"]
    "]": ["」", "】", "〕", "］"]
    "^": {commit: "……"}
    _: "——"
    "`": "｀"
    "{": ["『", "〖", "｛"]
    "|": ["·", "｜", "§", "¦"]
    "}": ["』", "〗", "｝"]
    "~": "～"
  half_shape:
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    "#": "#"
    "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
    "%": ["%", "％", "°", "℃"]
    "&": "&"
    "'": {pair: ["‘", "’"]}
    "(": "（"
    ")": "）"
    "*": ["*", "＊", "·", "・", "×", "※", "❂"]
    "+": "+"
    ",": {commit: "，"}
    "-": "-"
    .: {commit: "。"}
    "/": ["、", "/", "／", "÷"]
    ":": {commit: "："}
    ";": {commit: "；"}
    "<": ["《", "〈", "«", "‹"]
    "=": "="
    ">": ["》", "〉", "»", "›"]
    "?": {commit: "？"}
    "@": "@"
    "[": ["「", "【", "〔", "［"]
    "\\": ["、", "\\", "＼"]
    "]": ["」", "】", "〕", "］"]
    "^": {commit: "……"}
    _: "——"
    "`": "`"
    "{": ["『", "〖", "｛"]
    "|": ["·", "|", "｜", "§", "¦"]
    "}": ["』", "〗", "｝"]
    "~": ["~", "～"]
  import_preset: default
recognizer:
  import_preset: default
  patterns:
    email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
    reverse_lookup: "`[a-z]*'?$"
    uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
    url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"
reverse_lookup:
  dictionary: cangjie5
  enable_completion: false
  enable_sentence: false
  enable_user_dict: true
  preedit_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜符|"
    - "xform/\\\\/ /"
  prefix: "`"
  suffix: "'"
  tips: "〔倉頡反查〕"
schema:
  author:
    - "佛振 <chen.sst@gmail.com>"
    - "『洋蔥』"
  dependencies:
    - cangjie5
  description: |
    「漢語拼音」，以符號按鍵 , . / ; ' 輸入聲調
    拼音碼表根據 CC-CEDICT 改編
    洋蔥mix-in版增加多國語言混打
    
  name: "★地球拼音(洋蔥mix-in版)★"
  schema_id: terra_pinyin_onion
  version: 202102
speller:
  algebra:
    - "derive|^([eaovs][v])[,]$|$1\\.|"
    - "derive|^([e][e][v])[,]$|$1\\.|"
    - "derive|^[e][v]([,.])$|\\-$1|"
    - "derive|^[e][e][v]([,.])$|\\-\\-$1|"
    - "derive|^([x][x])[,]$|$1\\.|"
    - "derive|^[x][x]([,.])$|shime$1|"
    - "derive|^[x][x]([,.])$|sime$1|"
    - "derive|^noma([.])$|dou$1|"
    - "derive|^dou([.])$|onaji$1|"
    - "derive|^dou([.])$|onazi$1|"
    - "derive|^dou([.])$|odoriji$1|"
    - "derive|^dou([.])$|odorizi$1|"
    - "derive/^xtu([,.])$/ltu$1/"
    - "derive/^xtu([,.])$/xtsu$1/"
    - "derive/^xtu([,.])$/ltsu$1/"
    - "derive/^x([aeiou])([,.])$/l$1$2/"
    - "derive/^x(y[auo]|wa)([,.])$/l$1$2/"
    - "derive/^xke([,.])$/lke$1/"
    - "derive/^xke([.])$/ke$1/"
    - "derive/^xka([,.])$/lka$1/"
    - "derive/^xka([.])$/ka$1/"
    - "derive/^ssh([auo])([,.])$/ssy$1$2/"
    - "derive/^cch([auo])([,.])$/ccy$1$2/"
    - "derive/^cch([auo])([,.])$/tty$1$2/"
    - "derive/^jj([auo])([,.])$/zzy$1$2/"
    - "derive/^jj([auo])([,.])$/jjy$1$2/"
    - "derive/^ddy([auo])([,.])$/zzy$1$2/"
    - "derive/^ddy([auo])([,.])$/jj$1$2/"
    - "derive/^cchi([,.])$/tti$1/"
    - "derive/^sshi([,.])$/ssi$1/"
    - "derive/^ffu([,.])$/hhu$1/"
    - "derive/^ttsu([,.])$/ttu$1/"
    - "derive/^jji([,.])$/zzi$1/"
    - "derive/^sh([auo])([,.])$/sy$1$2/"
    - "derive/^ch([auo])([,.])$/cy$1$2/"
    - "derive/^ch([auo])([,.])$/ty$1$2/"
    - "derive/^j([auo])([,.])$/jy$1$2/"
    - "derive/^j([auo])([,.])$/zy$1$2/"
    - "derive/^dy([auo])([,.])$/j$1$2/"
    - "derive/^dy([auo])([,.])$/zy$1$2/"
    - "derive/^shi([,.])$/si$1/"
    - "derive/^chi([,.])$/ti$1/"
    - "derive/^tsu([,.])$/tu$1/"
    - "derive/^fu([,.])$/hu$1/"
    - "derive/^ji([,.])$/zi$1/"
    - "derive/^u([,.])$/wu$1/"
    - "xform/^dvyu([.])$/dyu$1/"
    - "xlit|/',.-!;|ABCDEFG|"
    - "xform/^([a-z]+)[B][B]$/$1G/"
    - "xform/^([G])([G])([a-z]+)([B])$/$3BB/"
    - "xform/^([a-z]+)AF$/$1A/"
    - "xform/^([a-z]+)AAF$/$1AA/"
    - "derive/^([nl])ve([1-5])$/$1ue$2/"
    - "derive/^([jqxy])u([a-z]*)([1-5])$/$1v$2$3/"
    - "derive/^([a-z]+)un([1-5])$/$1uen$2/"
    - "derive/^([a-z]+)ui([1-5])$/$1uei$2/"
    - "derive/^([a-z]+)iu([1-5])$/$1iou$2/"
    - "derive/^([a-z]+)ao([1-5])$/$1oa$2/"
    - "derive/^([a-z]+)([aeiou])ng([1-5])$/$1$2gn$3/"
    - "derive/^([a-z]+)([iu])a(o|ng?)([1-5])$/$1a$2$3$4/"
    - "derive/^([dtngkhrzcs])o(u|ng)([1-5])$/$1o$3/"
    - "derive/^([a-z]+)ong([1-5])$/$1on$2/"
    - "abbrev/^([a-z])([a-z]+)([1-5])$/$1/"
    - "abbrev/^([zcs]h)([a-z]+)([1-5])$/$1/"
    - "abbrev/^([a-zE]+)([1-5ABCDG])$/$1/"
    - "xlit|12345ABCDEFG|;/.,'/',.-!;|"
  alphabet: "zyxwvutsrqponmlkjihgfedcba-;,./'"
  delimiter: " "
  initials: "zyxwvutsrqponmlkjihgfedcba-"
switches:
  - name: ascii_mode
    reset: 0
    states: ["中文", "西文"]
  - name: full_shape
    states: ["半角", "全角"]
  - name: ascii_punct
    reset: 0
    states: ["。，", "．，"]
  - name: simplification
    states: ["漢字", "汉字"]
  - name: back_mark
    reset: 1
    states: ["無", "註"]
top_reverse_lookup:
  comment_format:
    - "xform/(^|[ ])([eaovs][v])([,])/$1$2$3 $2\\./"
    - "xform/(^|[ ])([e][e][v])([,])/$1$2$3 $2\\./"
    - "xform/(^|[ ])([e][v])([,])/$1\\-$3 \\-\\. $2$3/"
    - "xform/(^|[ ])([e][e][v])([,])/$1\\-\\-$3 \\-\\-\\. $2$3/"
    - "xform/(^|[ ])([x][x])([,])/$1 shime\\, shime\\. sime\\, sime\\. $2$3 $2./"
    - "xform/(^|[ ])(noma)([.])/$1dou$3 $2$3/"
    - "xform/(^|[ ])(dou)([.])/$1$2$3 odoriji$3 odorizi$3 onaji$3 onazi$3/"
    - "xform/(^|[ ])(xtu)([,.])/$1ltu$3 ltsu$3 xtsu$3 $2$3/"
    - "xform/(^|[ ])x([aeiou])([,.])/$1l$2$3 x$2$3/"
    - "xform/(^|[ ])x(y[auo]|wa)([,.])/$1l$2$3 x$2$3/"
    - "xform/(^|[ ])x(k[ea])([,.])/$1l$2$3 x$2$3/"
    - "xform/(^|[ ])l(k[ea])([.])/$1$2$3 l$2$3/"
    - "xform/(^|[ ])ssh([auo])([,.])/$1ssh$2$3 ssy$2$3/"
    - "xform/(^|[ ])cch([auo])([,.])/$1cch$2$3 ccy$2$3 tty$2$3/"
    - "xform/(^|[ ])jj([auo])([,.])/$1jj$2$3 jjy$2$3 zzy$2$3/"
    - "xform/(^|[ ])ddy([auo])([,.])/$1ddy$2$3 jj$2$3 zzy$2$3/"
    - "xform/(^|[ ])(cchi)([,.])/$1$2$3 tti$3/"
    - "xform/(^|[ ])(sshi)([,.])/$1$2$3 ssi$3/"
    - "xform/(^|[ ])(ffu)([,.])/$1$2$3 hhu$3/"
    - "xform/(^|[ ])(ttsu)([,.])/$1ttu$3 $2$3/"
    - "xform/(^|[ ])(jji)([,.])/$1$2$3 zzi$3/"
    - "xform/(^|[ ])sh([auo])([,.])/$1sh$2$3 sy$2$3/"
    - "xform/(^|[ ])ch([auo])([,.])/$1ch$2$3 cy$2$3 ty$2$3/"
    - "xform/(^|[ ])j([auo])([,.])/$1j$2$3 jy$2$3 zy$2$3/"
    - "xform/(^|[ ])dy([auo])([,.])/$1dy$2$3 j$2$3 zy$2$3/"
    - "xform/(^|[ ])(shi)([,.])/$1$2$3 si$3/"
    - "xform/(^|[ ])(chi)([,.])/$1$2$3 ti$3/"
    - "xform/(^|[ ])(tsu)([,.])/$1$2$3 tu$3/"
    - "xform/(^|[ ])(fu)([,.])/$1$2$3 hu$3/"
    - "xform/(^|[ ])(ji)([,.])/$1$2$3 zi$3/"
    - "xform/(^|[ ])(u)([,.])/$1$2$3 wu$3/"
    - "xform/(^|[ ])(dvyu)([.])/$1dyu$3/"
    - "xlit|';/!,.|ABCDEF|"
    - "xform/^/  /"
    - "xform/BB([a-z]+)A/   $1BB/"
    - "xform/^(.+)CCD/    $1ZZ`韓-HJ@/"
    - "xform/CD/Z`韓-單@/"
    - "xform/C/C`韓@/"
    - "xform/Z/C/"
    - "xform/`韓-單音@ / /"
    - "xform/`韓@ / /"
    - "xform/BB/X`拉-組@/"
    - "xform/AA/Y`拉-大@/"
    - "xform/A/A`拉-小@/"
    - "xform/Y/B/"
    - "xform/X/AA/"
    - "xform/`拉-組@   / /"
    - "xform/`拉-大@ / /"
    - "xform/`拉-小@ / /"
    - "xform/E/E`日-平@/"
    - "xform/F/F`日-片@/"
    - "xform/`日-平@ / /"
    - "xform/`日-片@ / /"
    - "xform/([svc])([F])`日-片@/$1$2/"
    - "xform/([avse])([v])([F])/$1$2$3`日-符@/"
    - "xform/evF`日-符@ v/evF v/"
    - "xlit|ABCDEF`@|';/!,.〔〕|"
    - "xform ([aeiou])(ng?|r)([1234]) $1$3$2"
    - "xform ([aeo])([iuo])([1234]) $1$3$2"
    - "xform a1 ā"
    - "xform a2 á"
    - "xform a3 ǎ"
    - "xform a4 à"
    - "xform e1 ē"
    - "xform e2 é"
    - "xform e3 ě"
    - "xform e4 è"
    - "xform o1 ō"
    - "xform o2 ó"
    - "xform o3 ǒ"
    - "xform o4 ò"
    - "xform i1 ī"
    - "xform i2 í"
    - "xform i3 ǐ"
    - "xform i4 ì"
    - "xform u1 ū"
    - "xform u2 ú"
    - "xform u3 ǔ"
    - "xform u4 ù"
    - "xform v1 ǖ"
    - "xform v2 ǘ"
    - "xform v3 ǚ"
    - "xform v4 ǜ"
    - "xform/eh1/ê̄/"
    - "xform/eh4/ề/"
    - "xform/eh5/ê/"
    - "xform/([a-z]+)[0-5]/$1/"
  dictionary: terra_pinyin_onion.extended
  overwrite_comment: false
  tags:
    - abc
translator:
  comment_format:
    - "xform ([aeiou])(ng?|r)([1234]) $1$3$2"
    - "xform ([aeo])([iuo])([1234]) $1$3$2"
    - "xform a1 ā"
    - "xform a2 á"
    - "xform a3 ǎ"
    - "xform a4 à"
    - "xform e1 ē"
    - "xform e2 é"
    - "xform e3 ě"
    - "xform e4 è"
    - "xform o1 ō"
    - "xform o2 ó"
    - "xform o3 ǒ"
    - "xform o4 ò"
    - "xform i1 ī"
    - "xform i2 í"
    - "xform i3 ǐ"
    - "xform i4 ì"
    - "xform u1 ū"
    - "xform u2 ú"
    - "xform u3 ǔ"
    - "xform u4 ù"
    - "xform v1 ǖ"
    - "xform v2 ǘ"
    - "xform v3 ǚ"
    - "xform v4 ǜ"
    - "xform/eh1/ê̄/"
    - "xform/eh4/ề/"
    - "xform/eh5/ê/"
    - "xform/([a-z]+)[0-5]/$1/"
  dictionary: terra_pinyin_onion.extended
  preedit_format:
    - "xlit|;/.,'|¹²³⁴⁵|"
    - "xform|¹|⁽¹˸⁾|"
    - "xform|²|⁽²ˊ⁾|"
    - "xform|³|⁽³ꞏ⁾|"
    - "xform|⁴|⁽⁴’⁾|"
    - "xform|⁵|⁽⁵'⁾|"
  prism: terra_pinyin_onion