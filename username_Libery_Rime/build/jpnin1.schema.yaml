__build_info:
  rime_version: 1.7.1
  timestamps:
    default: 1561294610
    default.custom: 1614434151
    jpnin1.custom: 1612890480
    jpnin1.schema: 1612890480
    key_bindings: 1561294610
    key_bindings.custom: 0
    punctuation: 1561294610
    punctuation.custom: 0
editor:
  bindings:
    "Shift+Return": commit_raw_input
engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - "table_translator@jpnin1_phrase"
    - reverse_lookup_translator
    - script_translator
jpnin1_phrase:
  db_class: tabledb
  dictionary: ""
  enable_completion: false
  enable_sentence: false
  user_dict: jpnin1_phrase
key_binder:
  bindings:
    - {accept: "Control+p", send: Up, when: composing}
    - {accept: "Control+n", send: Down, when: composing}
    - {accept: "Control+b", send: Left, when: composing}
    - {accept: "Control+f", send: Right, when: composing}
    - {accept: "Control+a", send: Home, when: composing}
    - {accept: "Control+e", send: End, when: composing}
    - {accept: "Control+d", send: Delete, when: composing}
    - {accept: "Control+k", send: "Shift+Delete", when: composing}
    - {accept: "Control+h", send: BackSpace, when: composing}
    - {accept: "Control+g", send: Escape, when: composing}
    - {accept: "Control+bracketleft", send: Escape, when: composing}
    - {accept: "Alt+v", send: Page_Up, when: composing}
    - {accept: "Control+v", send: Page_Down, when: composing}
    - {accept: ISO_Left_Tab, send: "Shift+Left", when: composing}
    - {accept: "Shift+Tab", send: "Shift+Left", when: composing}
    - {accept: Tab, send: "Shift+Right", when: composing}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: comma, send: Page_Up, when: paging}
    - {accept: period, send: Page_Down, when: has_menu}
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+2", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+3", toggle: full_shape, when: always}
    - {accept: "Control+Shift+4", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+5", toggle: simplification, when: always}
    - {accept: "Control+Shift+6", toggle: extended_charset, when: always}
    - {accept: "Control+Shift+exclam", select: .next, when: always}
    - {accept: "Control+Shift+at", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+numbersign", toggle: full_shape, when: always}
    - {accept: "Control+Shift+dollar", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+percent", toggle: simplification, when: always}
    - {accept: "Control+Shift+asciicircum", toggle: extended_charset, when: always}
    - {accept: "Shift+space", toggle: ascii_mode, when: always}
    - {accept: "Control+comma", toggle: ascii_mode, when: always}
    - {accept: "Control+period", toggle: full_shape, when: always}
    - {accept: "Control+semicolon", toggle: simplification, when: always}
    - {accept: "Control+slash", toggle: ascii_punct, when: always}
    - {accept: comma, send: comma, when: has_menu}
    - {accept: comma, send: comma, when: paging}
    - {accept: period, send: period, when: has_menu}
    - {accept: period, send: period, when: paging}
    - {accept: minus, send: minus, when: has_menu}
    - {accept: minus, send: minus, when: paging}
    - {accept: equal, send: equal, when: has_menu}
    - {accept: equal, send: equal, when: paging}
    - {accept: Up, send: KP_Left, when: composing}
    - {accept: Up, send: Up, when: paging}
    - {accept: Right, send: "Shift+Right", when: composing}
    - {accept: "Shift+Right", send: Right, when: composing}
    - {accept: "Shift+Left", send: KP_Left, when: composing}
    - {accept: "Shift+space", send: "Shift+Right", when: composing}
    - {accept: Left, send: Page_Up, when: paging}
    - {accept: Right, send: Page_Down, when: paging}
    - {accept: Tab, send: Page_Down, when: has_menu}
    - {accept: "Shift+Tab", send: Page_Up, when: paging}
    - {accept: "Shift+Down", send: Page_Down, when: has_menu}
    - {accept: "Shift+Up", send: Page_Up, when: paging}
    - {accept: "Shift+space", send: "Shift+Left", when: paging}
    - {accept: Return, send: space, when: has_menu}
  import_preset: default
menu:
  alternative_select_keys: 1234567890
  page_size: 5
punctuator:
  full_shape:
    " ": {commit: "　"}
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    "#": ["＃", "⌘"]
    "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
    "%": ["％", "°", "℃"]
    "&": "＆"
    "'": {pair: ["‘", "’"]}
    "(": "（"
    ")": "）"
    "*": ["＊", "·", "・", "×", "※", "❂"]
    "+": "＋"
    ":": ["：", "；"]
    "<": {commit: "，"}
    "=": "＝"
    ">": {commit: "。"}
    "?": ["？", "／", "÷"]
    "@": ["＠", "☯"]
    "[": ["「", "【", "《", "〔", "［"]
    "\\": ["、", "＼"]
    "]": ["」", "】", "》", "〕", "］"]
    "^": {commit: "……"}
    _: ["——", "－"]
    "`": "｀"
    "{": ["『", "〖", "〈", "｛"]
    "|": ["·", "｜", "§", "¦"]
    "}": ["』", "〗", "〉", "｝"]
    "~": "～"
  half_shape:
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    "#": {commit: "＃"}
    "$": {commit: "＄"}
    "%": {commit: "％"}
    "&": {commit: "＆"}
    "'": {pair: ["‘", "’"]}
    "(": {commit: "（"}
    ")": {commit: "）"}
    "*": {commit: "＊"}
    "+": {commit: "＋"}
    ",": ["、"]
    .: ["。"]
    ":": {commit: "："}
    ";": {commit: "；"}
    "<": {commit: "＜"}
    "=": {commit: "＝"}
    ">": {commit: "＞"}
    "?": {commit: "？"}
    "@": {commit: "＠"}
    "[": {commit: "「"}
    "\\": {commit: "￥"}
    "]": {commit: "」"}
    "^": {commit: "＾"}
    _: {commit: "＿"}
    "`": ["｀"]
    "{": {commit: "『"}
    "|": {commit: "｜"}
    "}": {commit: "』"}
    "~": {commit: "〜"}
recognizer:
  patterns:
    email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
    reverse_lookup: "^`[a-z]*$"
    uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
    url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"
reverse_lookup:
  dictionary: cangjie5
  enable_completion: false
  preedit_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜符|"
  prefix: "`"
  tips: "〔漢字反查〕"
schema:
  author:
    - "『洋蔥』"
  dependencies:
    - cangjie5
  description: |
    日語
    
  name: "❃日語 in 1❃"
  schema_id: jpnin1
  version: 202102
speller:
  algebra:
    - "derive/sshi(.*)(;)$/qshi$1$2/"
    - "derive/ttsu(.*)(;)$/qtsu$1$2/"
    - "derive/kky([auo])(.*)(;)$/qky$1$2$3/"
    - "derive/cch([auo])(.*)(;)$/qch$1$2$3/"
    - "derive/nny([auo])(.*)(;)$/qny$1$2$3/"
    - "derive/kk([auoie])(.*)(;)$/qk$1$2$3/"
    - "derive/ss([auoie])(.*)(;)$/qs$1$2$3/"
    - "derive/tt([auoie])(.*)(;)$/qt$1$2$3/"
    - "derive/nn([auoie])(.*)(;)$/qn$1$2$3/"
    - "derive/pp([auoie])(.*)(;)$/qp$1$2$3/"
    - "derive/ky([auo])(.*)(;)$/kixy$1$2$3/"
    - "derive/gy([auoie])(.*)(;)$/gixy$1$2$3/"
    - "derive/sh([auo])(.*)(;)$/sixy$1$2$3/"
    - "derive/j([auo])(.*)(;)$/jixy$1$2$3/"
    - "derive/dy([auoie])(.*)(;)$/dixy$1$2$3/"
    - "derive/ch([auoe])(.*)(;)$/chixy$1$2$3/"
    - "derive/ny([auoie])(.*)(;)$/nixy$1$2$3/"
    - "derive/hy([auoie])(.*)(;)$/hixy$1$2$3/"
    - "derive/by([auoe])(.*)(;)$/bixy$1$2$3/"
    - "derive/py([auoie])(.*)(;)$/pixy$1$2$3/"
    - "derive/my([auoie])(.*)(;)$/mixy$1$2$3/"
    - "derive/ry([auoie])(.*)(;)$/rixy$1$2$3/"
    - "derive/ty([e])(.*)(;)$/chix$1$2$3/"
    - "derive/cchi/tti/"
    - "derive/sshi/ssi/"
    - "derive/ffu/hhu/"
    - "derive/ttsu/ttu/"
    - "derive/jji/zzi/"
    - "derive/ssh([auo])/ssy$1/"
    - "derive/cch([auo])/ccy$1/"
    - "derive/cch([auo])/tty$1/"
    - "derive/jj([auo])/zzy$1/"
    - "derive/jj([auo])/jjy$1/"
    - "derive/ddy([auo])/zzy$1/"
    - "derive/ddy([auo])/jj$1/"
    - "derive/(?<!s)shi/si/"
    - "derive/(?<!c)chi/ti/"
    - "derive/(?<!t)tsu/tu/"
    - "derive/(?<!f)fu/hu/"
    - "derive/(?<!j)ji/zi/"
    - "derive/(?<!s)sh([auo])/sy$1/"
    - "derive/(?<!c)ch([auo])/cy$1/"
    - "derive/(?<!c)ch([auo])/ty$1/"
    - "derive/(?<!j)j([auo])/zy$1/"
    - "derive/(?<!j)j([auo])/jy$1/"
    - "derive/(?<!d)dy([auo])/zy$1/"
    - "derive/(?<!d)dy([auo])/j$1/"
    - "derive/tye/che/"
    - "derive|\\-(.*)(;)$|ev$1$2|"
    - "derive|^\\-$|ev\\,|"
    - "derive|^\\-$|ev\\.|"
    - "derive|^\\-\\-$|eev\\,|"
    - "derive|^\\-\\-$|eev\\.|"
    - "derive|^\\/$|av\\,|"
    - "derive|^\\/$|av\\.|"
    - "derive|^\\,\\,$|sv\\,|"
    - "derive|^\\,\\,$|sv\\.|"
    - "derive|^\\,\\;$|vv\\,|"
    - "derive|^\\,\\;$|vv\\.|"
    - "derive|^\\.\\;$|ov\\,|"
    - "derive|^\\.\\;$|ov\\.|"
    - "derive|^shime\\,$|xx\\,|"
    - "derive|^shime\\.$|xx\\.|"
    - "derive|^shime\\.$|kigou\\.|"
    - "derive/q(?![yw][aeiou])/xtu/"
    - "derive/q(?![yw][aeiou])/ltu/"
    - "derive/q(?![yw][aeiou])/xtsu/"
    - "derive/q(?![yw][aeiou])/ltsu/"
    - "derive/xy/ly/"
    - "derive/xwa/lwa/"
    - "derive/x([aeiou])/l$1/"
    - "derive/xke/lke/"
    - "derive/xke\\./ke\\./"
    - "derive/xke\\./ga\\./"
    - "derive/xka/lka/"
    - "derive/xka\\./ka\\./"
    - "derive/^noma\\.$/dou\\./"
    - "derive/^dou\\.$/onaji\\./"
    - "derive/^dou\\.$/odoriji\\./"
    - "derive/^dou\\.$/kigou\\./"
    - "derive/^u/wu/"
    - "derive/n([,.;])/nn$1/"
    - "xform/^dvyu/dyu/"
    - "xform/^([kspt])([,.])(.+)$/$1$3/"
    - "derive/^([a-z-]+)([;])([a-z-]+)([;])$/$1$3$4/"
    - "derive/^([;a-z-]+)([,.])$/$1/"
    - "derive/^(.+)$/$1\\'\\[\\'/"
    - "abbrev/^([kstnhmyrwgzdbpxjlf])([aiueo])([.,])$/$1/"
    - "abbrev/^([c])([h])([aiueo])([.,])$/$1/"
  alphabet: "abcdefghijklmnopqrstuvwxyz,-.;/"
  delimiter: " "
switches:
  - name: ascii_mode
    reset: 0
    states: ["日文", "英文"]
  - name: full_shape
    states: ["半形", "全形"]
translator:
  comment_format:
    - "xform/ /  /"
  dictionary: jpnin1.extended
  disable_user_dict_for_patterns:
    - "^[-]{1,2}$"
  enable_completion: false
  enable_sentence: false
  enable_user_dict: true
  preedit_format:
    - "xform/ /  /"