__build_info:
  rime_version: 1.7.1
  timestamps:
    default: 1561294610
    default.custom: 1614434151
    hangeul.custom: 0
    hangeul.schema: 1612890480
    key_bindings: 1561294610
    key_bindings.custom: 0
    punctuation: 1561294610
    punctuation.custom: 0
editor:
  bindings:
    Return: confirm
    "Shift+Return": commit_raw_input
engine:
  processors:
    - "lua_processor@endspace"
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - "table_translator@hangeul_phrase"
    - reverse_lookup_translator
    - script_translator
hangeul_phrase:
  db_class: tabledb
  dictionary: ""
  enable_completion: false
  enable_sentence: false
  initial_quality: 0
  user_dict: hangeul_phrase
key_binder:
  bindings:
    - {accept: "Control+p", send: Up, when: composing}
    - {accept: "Control+n", send: Down, when: composing}
    - {accept: "Control+b", send: Left, when: composing}
    - {accept: "Control+f", send: Right, when: composing}
    - {accept: "Control+a", send: Home, when: composing}
    - {accept: "Control+e", send: End, when: composing}
    - {accept: "Control+d", send: Delete, when: composing}
    - {accept: "Control+k", send: "Shift+Delete", when: composing}
    - {accept: "Control+h", send: BackSpace, when: composing}
    - {accept: "Control+g", send: Escape, when: composing}
    - {accept: "Control+bracketleft", send: Escape, when: composing}
    - {accept: "Alt+v", send: Page_Up, when: composing}
    - {accept: "Control+v", send: Page_Down, when: composing}
    - {accept: ISO_Left_Tab, send: "Shift+Left", when: composing}
    - {accept: "Shift+Tab", send: "Shift+Left", when: composing}
    - {accept: Tab, send: "Shift+Right", when: composing}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: comma, send: Page_Up, when: paging}
    - {accept: period, send: Page_Down, when: has_menu}
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+2", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+3", toggle: full_shape, when: always}
    - {accept: "Control+Shift+4", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+5", toggle: simplification, when: always}
    - {accept: "Control+Shift+6", toggle: extended_charset, when: always}
    - {accept: "Control+Shift+exclam", select: .next, when: always}
    - {accept: "Control+Shift+at", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+numbersign", toggle: full_shape, when: always}
    - {accept: "Control+Shift+dollar", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+percent", toggle: simplification, when: always}
    - {accept: "Control+Shift+asciicircum", toggle: extended_charset, when: always}
    - {accept: "Shift+space", toggle: ascii_mode, when: always}
    - {accept: "Control+comma", toggle: ascii_mode, when: always}
    - {accept: "Control+period", toggle: full_shape, when: always}
    - {accept: "Control+semicolon", toggle: simplification, when: always}
    - {accept: "Control+slash", toggle: ascii_punct, when: always}
    - {accept: comma, send: comma, when: has_menu}
    - {accept: comma, send: comma, when: paging}
    - {accept: period, send: period, when: has_menu}
    - {accept: period, send: period, when: paging}
    - {accept: minus, send: minus, when: has_menu}
    - {accept: minus, send: minus, when: paging}
    - {accept: equal, send: equal, when: has_menu}
    - {accept: equal, send: equal, when: paging}
    - {accept: Left, send: Page_Up, when: paging}
    - {accept: Right, send: Page_Down, when: paging}
    - {accept: Tab, send: "Shift+Left", when: paging}
    - {accept: "Shift+space", send: Page_Down, when: has_menu}
    - {accept: "Shift+Tab", send: Page_Up, when: paging}
  import_preset: default
menu:
  alternative_select_keys: 1234567890
  page_size: 10
punctuator:
  full_shape:
    " ": {commit: "　"}
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    "#": ["＃", "⌘"]
    "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
    "%": ["％", "°", "℃"]
    "&": "＆"
    "'": {pair: ["‘", "’"]}
    "(": "（"
    ")": "）"
    "*": ["＊", "·", "・", "×", "※", "❂"]
    "+": "＋"
    ":": ["：", "；"]
    "<": {commit: "，"}
    "=": "＝"
    ">": {commit: "。"}
    "?": ["？", "／", "÷"]
    "@": ["＠", "☯"]
    "[": ["「", "【", "《", "〔", "［"]
    "\\": ["、", "＼"]
    "]": ["」", "】", "》", "〕", "］"]
    "^": {commit: "……"}
    _: ["——", "－"]
    "`": "｀"
    "{": ["『", "〖", "〈", "｛"]
    "|": ["·", "｜", "§", "¦"]
    "}": ["』", "〗", "〉", "｝"]
    "~": "～"
  half_shape:
    "\"": {pair: ["“", "”"]}
    "$": ["$", "₩", "＄", "¥", "￥", "€", "£", "￡", "₤", "¢", "￠", "₵", "₡", "¤", "৳", "฿", "₠", "₢", "₣", "₥", "₦", "₧", "₪", "₫", "₭", "₮", "₯", "₰", "₱", "₲", "₳", "₴", "₶", "₷", "₸", "₹", "₺", "₨", "﷼"]
    "%": ["%", "％", "‰", "‱", "°", "℃", "℉", "Å", "㏃", "㏆", "㎈", "㏄", "㏅", "㎝", "㎠", "㎤", "㏈", "㎗", "㎙", "㎓", "㎬", "㏉", "㏊", "㏋", "㎐", "㏌", "㎄", "㎅", "㎉", "㎏", "㎑", "㏍", "㎘", "㎞", "㏎", "㎢", "㎦", "㎪", "㏏", "㎸", "㎾", "㏀", "㏐", "㏓", "㎧", "㎨", "㎡", "㎥", "㎃", "㏔", "㎆", "㎎", "㎒", "㏕", "㎖", "㎜", "㎟", "㎣", "㏖", "㎫", "㎳", "㎷", "㎹", "㎽", "㎿", "㏁", "㎁", "㎋", "㎚", "㎱", "㎵", "㎻", "㏘", "㎩", "㎀", "㎊", "㏗", "㏙", "㏚", "㎰", "㎴", "㎺", "㎭", "㎮", "㎯", "㏛", "㏜", "㎔", "㏝", "㎂", "㎌", "㎍", "㎕", "㎛", "㎲", "㎶", "㎼"]
    "&": ["&", "＆", "＃", "＠", "⅟", "½", "↉", "⅓", "⅔", "¼", "⅕", "⅖", "⅗", "⅘", "⅙", "⅚", "⅐", "⅛", "⅜", "⅝", "⅞", "⅑", "⅒"]
    "'": {pair: ["‘", "’"]}
    "*": ["*", "＊", "﹡", "※", "❂", "★", "☆", "✡", "❋", "❊", "❉", "❈", "❇", "❆", "❅", "❄", "❃", "❁", "❀", "✿", "✾", "✽", "✼", "✻", "✺", "✹", "✸", "✷", "✶", "✵", "✴", "✳", "✲", "✱", "✰", "✯", "✮", "✭", "✬", "✫", "✪", "✩", "✧", "✦", "✥", "✤", "✣", "✢", "⛤", "⛥", "⛦", "⛧"]
    ",": {commit: ","}
    "-": {commit: "-"}
    .: {commit: .}
    ";": [";", "…", "·", "`", "'", "\""]
    "^": ["^", "+", "-", "×", "÷", "±", "=", "≠", "＝", "＋", "－", "＜", "＞", "∈", "∏", "∑", "≮", "≯", "∕", "√", "∝", "∞", "∟", "∠", "∥", "∧", "∨", "∩", "∪", "∫", "∮", "∴", "∵", "∷", "∽", "≈", "≌", "≒", "≡", "≤", "≥", "≦", "≧", "⊕", "⊙", "⊥", "⊿", "㏑", "㏒"]
    "`": {commit: "₩"}
recognizer:
  patterns:
    email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
    reverse_lookup: "^=[a-z]*'?$"
    url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"
reverse_lookup:
  dictionary: cangjie5
  enable_completion: false
  preedit_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜符|"
  prefix: "="
  suffix: "'"
  tips: "〔漢字反查〕"
schema:
  author:
    - "『洋蔥』"
  dependencies:
    - cangjie5
  description: |
    韓文形碼
    
  name: "❃韓語形碼❃"
  schema_id: hangeul
  version: 202102
speller:
  alphabet: "abcdefghijklmnopqrstuvwxyz;/"
  delimiter: "'"
switches:
  - name: ascii_mode
    reset: 0
    states: ["韓文", "英文"]
  - name: full_shape
    states: ["半形", "全形"]
translator:
  comment_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz'|ABCDEFGHIJKLMNOPQRSTUVWXYZ |"
  dictionary: hangeul.extended
  disable_user_dict_for_patterns:
    - "^[a-z]{1}$"
    - "^[a-z]{2}$"
    - "^[a-z]{3}$"
  enable_completion: false
  enable_sentence: false
  enable_user_dict: true
  preedit_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz'|ABCDEFGHIJKLMNOPQRSTUVWXYZ |"