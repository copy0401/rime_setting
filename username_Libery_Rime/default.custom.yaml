# default.custom.yaml
# save it to: 
#   ~/.config/ibus/rime  (linux)
#   ~/Library/Rime       (macos)
#   %APPDATA%\Rime       (windows)

patch:
  schema_list:
######## 洋蔥 plus 版 ########
    - schema: bopomo_onionplus_2 #新注音2
    # - schema: bopomo_onionplus #新注音
    # - schema: hangeul #韓語
    # - schema: jpnin1 #日語
    # - schema: latinin1 #拉丁
    # - schema: greek #希臘
    # - schema: cyrillic #西里爾
    # - schema: allbpm #注音文
    - schema: easy_en_b #easy英文
    - schema: easy_en_comment #英翻中
    # - schema: fullshape #全形
    # - schema: symbols_bpmf #系列符號
    - schema: cangjie5 #倉頡
    - {schema: liur} #嘸蝦米
    # - schema: luna_pinyin #拼音
    # - schema: luna_pinyin_simp #拼音 簡化字
    # - schema: luna_pinyin_fluency #拼音 語句流
    # - schema: bopomofo #注音
    # - schema: bopomofo_tw #注音 台灣
    # - schema: stroke #五筆
    - schema: terra_pinyin #地球拼音
    # - {schema: liur_Trad}
###############################　

  switcher/fix_schema_list_order: true #固定方案選單順序
  switcher/hotkeys:
    - Control+grave
    - Control+Shift+grave
    - F4

  key_binder/bindings:
    - { when: composing, accept: Control+p, send: Up }
    - { when: composing, accept: Control+n, send: Down }
    - { when: composing, accept: Control+b, send: Left }
    - { when: composing, accept: Control+f, send: Right }
    - { when: composing, accept: Control+a, send: Home }
    - { when: composing, accept: Control+e, send: End }
    - { when: composing, accept: Control+d, send: Delete }
    - { when: composing, accept: Control+k, send: Shift+Delete }
    - { when: composing, accept: Control+h, send: BackSpace }
    - { when: composing, accept: Control+g, send: Escape }
    - { when: composing, accept: Control+bracketleft, send: Escape }
    - { when: composing, accept: Alt+v, send: Page_Up }
    - { when: composing, accept: Control+v, send: Page_Down }
    # move by word
    - { when: composing, accept: ISO_Left_Tab, send: Shift+Left }
    - { when: composing, accept: Shift+Tab, send: Shift+Left }
    - { when: composing, accept: Tab, send: Shift+Right }
    # flip page
    - { when: has_menu, accept: minus, send: Page_Up }
    - { when: has_menu, accept: equal, send: Page_Down }
    - { when: paging, accept: comma, send: Page_Up }
    - { when: has_menu, accept: period, send: Page_Down }
    # hotkey switch
    - { when: always, accept: Control+Shift+1, select: .next }
    - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
    - { when: always, accept: Control+Shift+3, toggle: full_shape }
    - { when: always, accept: Control+Shift+4, toggle: ascii_punct } #新增！
    - { when: always, accept: Control+Shift+5, toggle: simplification } #Control+Shift+4
    - { when: always, accept: Control+Shift+6, toggle: extended_charset } #Control+Shift+5
    - { when: always, accept: Control+Shift+exclam, select: .next }
    - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
    - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
    - { when: always, accept: Control+Shift+dollar, toggle: ascii_punct }
    - { when: always, accept: Control+Shift+percent, toggle: simplification }
    - { when: always, accept: Control+Shift+asciicircum, toggle: extended_charset }
# 新增下排功能快捷鍵
    - { when: always, accept: Shift+space, toggle: ascii_mode }
    - { when: always, accept: Control+comma, toggle: ascii_mode }
    - { when: always, accept: Control+period, toggle: full_shape }
    - { when: always, accept: Control+semicolon, toggle: simplification }
    - { when: always, accept: Control+slash, toggle: ascii_punct }

#  ascii_composer:
#    good_old_caps_lock: false
#  ascii_composer/switch_key:
#    Shift_L: noop
#    Shift_R: noop
#    Caps_Lock: clear
#    Eisu_toggle: clear
#    Control_L: noop
#    Control_R: noop

